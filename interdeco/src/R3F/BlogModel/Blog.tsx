/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/blog.glb --transform --precision=10 --shadows --keepnames --meta --types 
Files: public/models/blog.glb [138.18KB] > /Users/bucketkim/Documents/GitHub/inter-deco/interdeco/blog-transformed.glb [16.63KB] (88%)
*/

import { Float, useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    B_geo: THREE.Mesh;
    L_geo: THREE.Mesh;
    O_geo: THREE.Mesh;
    G_geo: THREE.Mesh;
  };
  materials: {};
};

const BlogModel = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes } = useGLTF("/models/blog.glb") as GLTFResult;

  console.log(nodes);

  return (
    <group {...props} dispose={null}>
      <Float speed={2} rotationIntensity={0.5} floatIntensity={0.25}>
        <mesh
          name="B_geo"
          castShadow
          receiveShadow
          geometry={nodes.B_geo.geometry}
          material={nodes.B_geo.material}
          rotation={[Math.PI / 2, 0, 0]}
          position={[-2.5, 1.5, 0]}
          scale={1.4}
          userData={{ name: "B_geo" }}
        />
      </Float>
      <Float speed={2} rotationIntensity={0.5} floatIntensity={0.25}>
        <mesh
          name="L_geo"
          castShadow
          receiveShadow
          geometry={nodes.L_geo.geometry}
          material={nodes.L_geo.material}
          rotation={[Math.PI / 2, 0, 0]}
          position={[2.5, 1.5, 0]}
          scale={1.4}
          userData={{ name: "L_geo" }}
        />
      </Float>
      <Float speed={2} rotationIntensity={0.5} floatIntensity={0.25}>
        <mesh
          name="O_geo"
          castShadow
          receiveShadow
          geometry={nodes.O_geo.geometry}
          material={nodes.O_geo.material}
          rotation={[Math.PI / 2, 0, 0]}
          position={[-2.5, -1.5, 0]}
          scale={1.4}
          userData={{ name: "O_geo" }}
        />
      </Float>
      <Float speed={2} rotationIntensity={0.5} floatIntensity={0.25}>
        <mesh
          name="G_geo"
          castShadow
          receiveShadow
          geometry={nodes.G_geo.geometry}
          material={nodes.G_geo.material}
          rotation={[Math.PI / 2, 0, 0]}
          position={[2.5, -1.5, 0]}
          scale={1.4}
          userData={{ name: "G_geo" }}
        />
      </Float>
    </group>
  );
};

export default BlogModel;

useGLTF.preload("/models/blog.glb");
